kind: ConfigMap
apiVersion: v1
metadata:
  name: f5-as3-configmap
  namespace: nginx-ingress
  labels:
    f5type: virtual-server
    as3: "true"
data:
  template: |
    {
        "class": "AS3",
        "declaration": {
            "class": "ADC",
            "schemaVersion": "3.10.0",
            "id": "urn:uuid:33045210-3ab8-4636-9b2a-c98d22ab915d",
            "label": "http",
            "remark": "Basic AS3 Example",
            "as3_tenant": {
                "class": "Tenant",
                "as3_basic_app": {
                    "class": "Application",
                    "template": "generic",
                    "basic_app": {
                        "class": "Service_HTTP",
                        "virtualAddresses": [
                            "10.10.2.70"
                        ],
                        "iRules": [
                            "x_header_insert"
                        ],
                        "remark":"ingress: as3-basic-demo",
                        "virtualPort": 80,
                        "pool": "as3_basic_pool"
                    },
                    "as3_basic_pool": {
                        "class": "Pool",
                        "monitors": [
                            {"use": "http_nginxIngress_monitor"}
                        ],
                        "members": [
                            {
                                "servicePort": 8080,
                                "serverAddresses": []
                            }
                        ]
                    },
                   "x_header_insert": {
                        "class": "iRule",
                        "iRule": "when HTTP_REQUEST {\n eval [LB::select]\n HTTP::header insert x-node-address [LB::server addr]\n}\n",
                        "expand": true
                    },
                    "http_nginxIngress_monitor": {
                        "class": "Monitor",
                        "monitorType": "http",
                        "interval": 5,
                        "protocol": "http",
                        "send": "GET /nginx-health\\r\\n\\r\\n",
                        "receive": "healthy",
                        "timeout": 16
                    }
                }
            }
        }
    }
